<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
use Cmfcmf\OpenWeatherMap;
use Cmfcmf\OpenWeatherMap\Exception as OWMException;

function sapient_brancott_preprocess_views_view_fields(&$variables) {
	global $base_url;
	
  $view_id = $variables['view']->storage->id();
  switch ($view_id) {

    case 'homepage_components':
      if ($variables['view']->current_display == 'common_hero_component') {
        
        if ($variables['row']->_entity->field_season_description) {
          $values = $variables['row']->_entity->field_season_description->getValue();
          $city = $variables['row']->_entity->field_city->value;

          $month = date('n');
          if (!empty($values[$month - 1])) {
            $variables['season_desc'] = $values[$month - 1]['value'];
          }
          else {
            $variables['season_desc'] = '';
          }
          $owm = new OpenWeatherMap('bd4028edc390aa0629042fefed9976ca');
          $weather = $owm->getWeather($city, 'metric');
		  
		  $icon_id = $weather->weather->icon;
		  $basepath = base_path() . $variables['directory'];
		  
		  $variables['temp_icon'] = $base_url.$basepath.'/css/images\season_icons/'.$icon_id.'.svg' ;
          $variables['current_temp'] = html_entity_decode($weather->temperature->now);
          $variables['temp_unit'] = $weather->temperature->getUnit();
          $variables['current_date'] = date('d M Y / g:ia');
        }
      }
    case 'wines_hero_component':
      if ($variables['view']->current_display == 'wines_hero_component') {
        if ($variables['row']->_entity->field_wine_id) {
          $wine_id = $variables['row']->_entity->field_wine_id->value;
          $details = braoncott_rest_api_get_results($wine_id);
          $variables['wine_title'] = $details->title;
		  $variables['wine_range'] = $details->range;
		  $variables['wine_description'] = $details->description;
        }
      }
	  if ($variables['view']->current_display == 'related_wines') {
        if ($variables['row']->_entity->field_wine_id) {
          $wine_id = $variables['row']->_entity->field_wine_id->value;
          $details = braoncott_rest_api_get_results($wine_id);
          $variables['wine_title'] = $details->title;
		  $variables['wine_range'] = $details->range;
        }
      }
	  if ($variables['view']->current_display == 'awards_and_accolades') {
        if ($variables['row']->_entity->field_wine_id) {
          $wine_id = $variables['row']->_entity->field_wine_id->value;
          $details = braoncott_rest_api_get_results($wine_id);
		  $variables['wine_award'] = $details->wineAwards;
        }
      }
	  if ($variables['view']->current_display == 'tasting_notes_component') {
        if ($variables['row']->_entity->field_wine_id) {
          $wine_id = $variables['row']->_entity->field_wine_id->value;
          $details = braoncott_rest_api_get_results($wine_id);
		  $variables['tasting_notes_aroma'] = $details->aroma;
		  $variables['tasting_notes_taste'] = $details->taste;
		  $variables['tasting_notes_complement'] = $details->complement;
        }
      }
      break;
  }
}


