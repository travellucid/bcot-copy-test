<?php

/**
 * @file
 */
/**
 * Theme hook.
 */

/**
 *
 */
function sapient_our_wines_theme($existing, $type, $theme, $path) {

  return array(
    'sapient_our_wines_block' => array(
      'variables' => array('arguments' => NULL, 'filters' => NULL),
    ),
  );
}

function sapient_our_wines_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_homepage_edit_form' or $form_id == 'node_homepage_form') {
    $form['#validate'][] = 'character_limitation_homepage';
  }
  if ($form_id == 'node_our_story_edit_form' or $form_id == 'node_our_story_form') {
    $form['#validate'][] = 'character_limitation_our_story';
  }
  if ($form_id == 'node_visit_us_edit_form' or $form_id == 'node_visit_us_form') {
    $form['#validate'][] = 'character_limitation_visit_us';
  }
  if ($form_id == 'menu_link_content_menu_link_content_form') {
    $form['#validate'][] = 'character_limitation_header_menu';
  }
  if ($form_id == 'node_private_events_edit_form' or $form_id == 'node_private_events_form') {
    $form['#validate'][] = 'character_limitation_private_page';
  }
  if ($form_id == 'node_vineyard_edit_form' or $form_id == 'node_vineyard_form') {
    $form['#validate'][] = 'character_limitation_vineyard_page';
  }
  if ($form_id == 'node_tours_and_experiences_edit_form' or $form_id == 'node_tours_and_experiences_form') {
    $form['#validate'][] = 'character_limitation_tours_and_experiences';
		
  }
  if ($form_id == 'node_wines_edit_form' or $form_id == 'node_wines_form') {
    $form['#validate'][] = 'character_limitation_wines_page';
  }
  if ($form_id == 'node_restaurant__edit_form' or $form_id == 'node_restaurant__form') {
    $form['#validate'][] = 'character_limitation_restaurant';
  }
  if ($form_id == 'taxonomy_term_our_wines_form') {
    $form['#validate'][] = 'character_limitation_taxonomy_term_our_wines_form';
  }
  if ($form_id == 'taxonomy_term_contact_us_vocabulary_form') {
    $form['#validate'][] = 'character_limitation_taxonomy_term_contact_us_form';
  }
  if ($form_id == 'menu_edit_form') {
    // Extend menu_edit_menu with the limit form.
    $form['menu_item_limit'] = sapient_our_wines_config_menu($form, $form_state->getBuildInfo()['callback_object']);

    $form['#validate'][] = 'sapient_our_wines_menu_validate';
    array_unshift($form['actions']['submit']['#submit'], 'sapient_our_wines_config_menu_submit');
  }
  if ($form_id == 'menu_link_content_menu_link_content_form') {
    // Add a validation to form menu_edit_item.
    array_unshift($form['#validate'], 'sapient_our_wines_menu_validate');
  }
  if ($form_id == 'webform_submission_enquire_form_form') {
    $form['#validate'][] = 'webform_submission_enquire_form_form_validation';
  }
}

function character_limitation_restaurant($form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $values = $form_state->getValues();
  $menu_description = strlen($values['field_menu_description'][0]['value']);


  if ($menu_description > 200) {
    $form_state->setErrorByName('field_menu_description', 'Max length for this field is 200 characters.');
  }
}

/**
 * Add a form element to configure the item limitation of a menu.
 *
 * @param array $form
 *   The current menu edit form.
 * @param MenuForm
 *   The MenuForm item.
 *
 * @return array
 *   The prefilled form element.
 */
function sapient_our_wines_config_menu($form, \Drupal\menu_ui\MenuForm $menu_form) {
  $menu_name = empty($menu_form->getEntity()->id()) ? 'new' : $menu_form->getEntity()->id();
  // Try to get the current limit of the menu.
  $config = \Drupal::service('config.factory')->getEditable('menu_item_limit.settings');
  $limit = empty($config->get($menu_name)) ? 0 : $config->get($menu_name);
  $config_item = array(
    '#type' => 'textfield',
    '#description' => t('Set the amount of items allowed in this menu. Set 0 to allow unlimited items.'),
    '#title' => t('Item Limitation'),
    '#default_value' => $limit,
  );
  return $config_item;
}

/**
 * Validate the user input for the item limitation.
 *
 * @param array $form
 *   The current menu edit form.
 * @param array $form_state
 *   The current state of the menu edit form.
 */
function sapient_our_wines_config_menu_validate($form, \Drupal\Core\Form\FormStateInterface &$form_state) {
  // Check if the entered limit is set to a value of 0 or higher.
  $limit = $form_state->getValue('menu_item_limit');
  if ((!is_numeric($limit)) || ($limit < 0)) {
    form_set_error('menu_item_limit', t('The Item Limitation has to be set to 0 or higher.'));
  }
}

/**
 * Set the new value for the item limitation of the menu.
 *
 * @param array $form
 *   The current menu edit form.
 * @param array $form_state
 *   The current state of the menu edit form.
 */
function sapient_our_wines_config_menu_submit($form, \Drupal\Core\Form\FormStateInterface &$form_state) {
  // Set the limit for the menu.
  \Drupal::logger('menu_item_limit')->notice('mymodule submit ');
  $limit = $form_state->getValue('menu_item_limit');
  $menu_name = $form_state->getValue('id');
  $config = \Drupal::service('config.factory')->getEditable('menu_item_limit.settings');
  $config->set($menu_name, $limit);
  $config->save();
}

/**
 * Validate an item within limit settings.
 *
 * @param array $form
 *   The current menu item edit form.
 * @param array $form_state
 *   The current state of the menu item edit form.
 *
 * @return bool
 *   TRUE when the item can be created and the limit hasn't been reached.
 */
function sapient_our_wines_menu_validate($form, \Drupal\Core\Form\FormStateInterface &$form_state) {
  // Check if menu item already exists and validate then.
  if (($form_state->getBuildInfo()['callback_object']->getEntity()->isNew())) {
    return TRUE;
  }
  $value = $form_state->getValues();
  $form_limit = $value['menu_item_limit'];
  $menu_name = $value['id'];
  $config = \Drupal::service('config.factory')->getEditable('menu_item_limit.settings');
  $limit = empty($config->get($menu_name)) ? 0 : $config->get($menu_name);
  if ($form_limit != $limit) {
    $limit = $form_limit;
  }
  // If the limit is set to unlimited, validate the form.
  if ($limit == 0) {
    return TRUE;
  }
  // Get the current amount of items and check if the count is within limits.
  else {
    $item_count = _menu_item_limitation_get_item_count($menu_name);
    if ($item_count > $limit) {
      $form_state->setErrorByName('menu_parent', t('The chosen menu already has the maximum number of items.'));
      return FALSE;
    }
  }
}

/**
 * This function takes a menu name and returns the number of menu items in it.
 *
 * @param string $menu_name
 *   The name of the menu.
 *
 * @return int
 *   The amount of items in the menu.
 */
function _menu_item_limitation_get_item_count($menu_name) {
  // @FIXME
// menu_tree_all_data() is gone in Drupal 8. To generate or work with menu trees, you'll need to
// use the menu.link_tree service.
// 
// 
// @see https://www.drupal.org/node/2226481
// @see https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Menu%21MenuLinkTree.php/class/MenuLinkTree/8
// $menu = menu_tree_all_data($menu_name);
  $menu_manager = \Drupal::service('menu.link_tree');
  $parameters = $menu_manager->getCurrentRouteMenuTreeParameters($menu_name);

// Load the tree based on this set of parameters.
  $tree = $menu_manager->load($menu_name, $parameters);
  if (!empty($tree)) {
    return count($tree);
  }
  else {
    return 0;
  }
}

function webform_submission_enquire_form_form_validation($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $enquire_form_name = $values['name'];
   if (!preg_match('/^[A-Za-z]{1}[A-Za-z]{5,31}$/', $enquire_form_name))
    {
    $form_state->setErrorByName('name',  'Uppercase, lowercase, A-Z, a-z are allowed');
    }
    // print_r($values['email_address']);exit;
    $email = $values['email_address'];
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
      $form_state->setErrorByName('email_address', 'This is not a valid email ID');
    }
 }

function character_limitation_private_page($form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $values = $form_state->getValues();
  $referred_comp = count($values['field_referred_content']);
  if (strlen($values['field_referred_content'][0]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][0][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][1]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][1][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][2]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][2][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][3]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][3][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][4]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][3][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][0]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][0][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][1]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][1][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][2]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][2][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][3]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][3][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][4]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][3][field_description', 'Max length for this field is 200 characters.');
  }
}


function character_limitation_vineyard_page($form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $values = $form_state->getValues();
  $referred_comp = count($values['field_referred_content']);
  $discover_comp = count($values['field_discover_carausal']);
  $hero_bottom_desc = strlen($values['field_hero_bottom_description'][0]['value']);
  $sign_up_text = strlen($values['field_signup'][0]['title']);
  $a = strlen($values['field_discover_carausal'][0]['field_carousel_description'][0]['value']);
  if (strlen($values['field_referred_content'][0]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][0][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][1]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][1][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][2]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][2][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][3]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][3][field_find_', 'Max length for this field is 20 characters.');
  }
  if (strlen($values['field_referred_content'][4]['field_find_'][0]['value']) > 20) {
    $form_state->setErrorByName('field_referred_content][3][field_find_', 'Max length for this field is 20 characters.');
  }

  if (strlen($values['field_referred_content'][0]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][0][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][1]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][1][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][2]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][2][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][3]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][3][field_description', 'Max length for this field is 200 characters.');
  }
  if (strlen($values['field_referred_content'][4]['field_description'][0]['value']) > 200) {
    $form_state->setErrorByName('field_referred_content][3][field_description', 'Max length for this field is 200 characters.');
  }


  if (strlen($values['field_discover_carausal'][0]['field_carousel_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_discover_carausal][0][field_carousel_description', 'Max length for this field is 500 characters.');
  }
  if (strlen($values['field_discover_carausal'][1]['field_carousel_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_discover_carausal][1][field_carousel_description', 'Max length for this field is 500 characters.');
  }
  if (strlen($values['field_discover_carausal'][2]['field_carousel_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_discover_carausal][2][field_carousel_description', 'Max length for this field is 500 characters.');
  }
  if (strlen($values['field_discover_carausal'][3]['field_carousel_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_discover_carausal][3][field_carousel_description', 'Max length for this field is 500 characters.');
  }
  if (strlen($values['field_discover_carausal'][4]['field_carousel_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_discover_carausal][3][field_carousel_description', 'Max length for this field is 500 characters.');
  }

  if ($hero_bottom_desc > 500) {
    $form_state->setErrorByName('field_hero_bottom_description', 'Max length for this field is 500 characters.');
  }
  if ($sign_up_text > 20) {
    $form_state->setErrorByName('field_signup', 'Max length for this field is 20 characters.');
  }
}

function character_limitation_header_menu($form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $values = $form_state->getValues();
  $link_length = strlen($values['title'][0]['value']);

  if ($link_length > 20) {
    $form_state->setErrorByName('title', 'Max length for this field is 20 characters.');
  }
}

function character_limitation_visit_us($form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $values = $form_state->getValues();
  $link_visit_us = strlen($values['field_hero_cta_first'][0]['title']);

  if ($link_visit_us > 15) {
    $form_state->setErrorByName('field_hero_cta_first', 'Max length for this field is 15 characters.');
  }
}

function character_limitation_taxonomy_term_our_wines_form($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  if ($values['tid'] == '106') {
    if (strlen($values['name'][0]['value']) > 60) {
      $form_state->setErrorByName('name', 'Max length for this field is 60 characters.');
    }
  }
}

function character_limitation_taxonomy_term_contact_us_form($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  if ($values['tid'] == '111') {
    if (strlen($values['name'][0]['value']) > 30) {
      $form_state->setErrorByName('name', 'Max length for this field is 30 characters.');
    }
  }
}

function character_limitation_our_story($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $link_our_story = strlen($values['field_hero_cta_first'][0]['title']);


  if ($link_our_story > 30) {
    $form_state->setErrorByName('field_hero_cta_first', 'Max length for this field is 30 characters.');
  }
}

function character_limitation_homepage($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  //$desc_visit_us = strlen($values['field_visit_us_description'][0]['value']);
  $desc_our_wines = strlen($values['field_our_wine_description'][0]['value']);
  $cta1_length_promo = strlen($values['field_hero_cta_first'][0]['title']);
  $cta2_length_promo = strlen($values['field_hero_cta_second'][0]['title']);
  $cta3_length_promo = strlen($values['field_hero_cta_thi'][0]['title']);
  $cta_length_signup = strlen($values['field_signup'][0]['title']);
  $cta_length_visitus = strlen($values['field_visit_us_cta'][0]['title']);
  $cta_length_wines = strlen($values['field_our_wine_cta'][0]['title']);
  //$our_perspective_subheading =strlen($values['field_our_perspective_subheading'][0]['value']);
  //$our_perspective_headline =strlen($values['field_our_perspective_headline'][0]['value']);
  $our_perspective_desc = strlen($values['field_our_perspective_desc'][0]['value']);
  //$visit_us_subheading =strlen($values['field_visit_us_small_headline'][0]['value']);
  //$visit_us_heading =strlen($values['field_visit_us_mainheadline'][0]['value']);
  $visit_us_desc = strlen($values['field_visit_us_description'][0]['value']);


  if ($desc_our_wines > 500) {
    $form_state->setErrorByName('field_our_wine_description', 'Max length for this field is 500 characters.');
  }
  if ($cta1_length_promo > 20) {
    $form_state->setErrorByName('field_hero_cta_first', 'Max length for this field is 20 characters.');
  }
  if ($cta2_length_promo > 20) {
    $form_state->setErrorByName('field_hero_cta_second', 'Max length for this field is 20 characters.');
  }
  if ($cta3_length_promo > 20) {
    $form_state->setErrorByName('field_hero_cta_thi', 'Max length for this field is 20 characters.');
  }
  if ($cta_length_signup > 15) {
    $form_state->setErrorByName('field_signup', 'Max length for this field is 15 characters.');
  }
  if ($cta_length_visitus > 30) {
    $form_state->setErrorByName('field_visit_us_cta', 'Max length for this field is 30 characters.');
  }
  if ($cta_length_wines > 30) {
    $form_state->setErrorByName('field_our_wine_cta', 'Max length for this field is 30 characters.');
  }

  if ($our_perspective_desc > 500) {
    $form_state->setErrorByName('field_our_perspective_desc', 'Max length for this field is 500 characters.');
  }

  if ($visit_us_desc > 500) {
    $form_state->setErrorByName('field_visit_us_description', 'Max length for this field is 500 characters.');
  }
}

function character_limitation_tours_and_experiences($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  
  
  if (strlen($values['field_rezdy_block_collection'][0]['field_rezdy_block_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_rezdy_block_collection][0][field_rezdy_block_description', 'Max length for this field is 30 characters.');
  }

  if (strlen($values['field_rezdy_block_collection'][1]['field_rezdy_block_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_rezdy_block_collection][1][field_rezdy_block_description', 'Max length for this field is 30 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][2]['field_rezdy_block_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_rezdy_block_collection][2][field_rezdy_block_description', 'Max length for this field is 30 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][3]['field_rezdy_block_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_rezdy_block_collection][3][field_rezdy_block_description', 'Max length for this field is 30 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][4]['field_rezdy_block_description'][0]['value']) > 500) {
    $form_state->setErrorByName('field_rezdy_block_collection][3][field_rezdy_block_description', 'Max length for this field is 30 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][0]['field_rezdy_block_cost'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][0][field_rezdy_block_cost', 'Max length for this field is 100 characters.');
  }

  if (strlen($values['field_rezdy_block_collection'][1]['field_rezdy_block_cost'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][1][field_rezdy_block_cost', 'Max length for this field is 100 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][2]['field_rezdy_block_cost'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][2][field_rezdy_block_cost', 'Max length for this field is 100 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][3]['field_rezdy_block_cost'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][3][field_rezdy_block_cost', 'Max length for this field is 100 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][4]['field_rezdy_block_cost'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][3][field_rezdy_block_cost', 'Max length for this field is 100 characters.');
  }

  if (strlen($values['field_rezdy_block_collection'][0]['field_rezdy_block_availability'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][0][field_rezdy_block_availability', 'Max length for this field is 100 characters.');
  }

  if (strlen($values['field_rezdy_block_collection'][1]['field_rezdy_block_availability'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][1][field_rezdy_block_availability', 'Max length for this field is 100 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][2]['field_rezdy_block_availability'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][2][field_rezdy_block_availability', 'Max length for this field is 100 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][3]['field_rezdy_block_availability'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][3][field_rezdy_block_availability', 'Max length for this field is 100 characters.');
  }
  if (strlen($values['field_rezdy_block_collection'][4]['field_rezdy_block_availability'][0]['value']) > 100) {
    $form_state->setErrorByName('field_rezdy_block_collection][3][field_rezdy_block_availability', 'Max length for this field is 100 characters.');
  }
}

function character_limitation_wines_page($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $nutritional_info_cta1 = strlen($values['field_nutritional_info_cta1'][0]['title']);
  $nutritional_info_cta2 = strlen($values['field_nutritional_info_cta2'][0]['title']);
  $nutritional_info_cta = strlen($values['field_nutritional_info_cta'][0]['title']);
  $nutritional_info_cta1_uri = strlen($values['field_nutritional_info_cta1'][0]['uri']);
  $nutritional_info_cta2_uri = strlen($values['field_nutritional_info_cta2'][0]['uri']);
  if ($nutritional_info_cta1 > 40) {
    $form_state->setErrorByName('field_nutritional_info_cta1', 'Max length for this field is 40 characters.');
  }
  if ($nutritional_info_cta2 > 40) {
    $form_state->setErrorByName('field_nutritional_info_cta2', 'Max length for this field is 40 characters.');
  }
  if ($nutritional_info_cta1_uri > 100) {
    $form_state->setErrorByName('field_nutritional_info_cta1', 'Max length for this field is 100 characters.');
  }
  if ($nutritional_info_cta2_uri > 100) {
    $form_state->setErrorByName('field_nutritional_info_cta2', 'Max length for this field is 100 characters.');
  }
  if ($nutritional_info_cta > 20) {
    $form_state->setErrorByName('field_nutritional_info_cta', 'Max length for this field is 20 characters.');
  }

  $click_to_buy_hero = strlen($values['field_click_to_buy_hero_cta'][0]['title']);
  $click_to_buy = strlen($values['field_click'][0]['title']);

  if ($click_to_buy_hero > 20) {
    $form_state->setErrorByName('field_click_to_buy_hero_cta', 'Max length for this field is 20 characters.');
  }
  if ($click_to_buy > 20) {
    $form_state->setErrorByName('field_click', 'Max length for this field is 20 characters.');
  }
}
