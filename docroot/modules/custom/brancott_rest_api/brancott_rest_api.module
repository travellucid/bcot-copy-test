<?php

use Drupal\brancott_rest_api\Controller\BrancottRestApiController;

/**
 * @file
 * Test API module.
 */
function brancott_rest_api_reponse($url, $method = 'GET', $params = array()) {
  $methods = [
    'POST',
    'GET',
    'PUT',
    'DELETE'
  ];
  $result = array();

  try {
    if (empty($url)) {
      throw new Exception("Invalid url");
    }
    if (in_array(strtoupper($method), $methods) === FALSE) {
      throw new Exception("Invalid method");
    }
    else {

      switch (strtoupper($method)) {
        case 'GET':
        case 'POST':
        case 'PUT':
        case 'DELETE':

          $result = brancott_rest_api_call_request($url, $method, $params);
          break;
        default:
          throw new Exception("Invalid method");
          break;
      }
    }
  }
  catch (Exception $e) {
    echo $e->getMessage();
  }

  return $result;
}

function brancott_rest_api_call_request($requesturl, $method, $params = array()) {

  // request url
  $url = $requesturl;

  try {
    // initialized curl
    $ch = curl_init();
    // set header for curl request
    $headers = array(
      "Cache-Control: no-cache",
      "Pragma: no-cache"
    );
    // set required setting with curl configuration
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_FRESH_CONNECT, TRUE);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);
    curl_setopt($ch, CURLOPT_FORBID_REUSE, 1);

    // pass the additional values
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));

    // close the curl connection
    $result = curl_exec($ch);
    curl_close($ch);
    return $result;
  }
  catch (Exception $e) {
    echo $e->getMessage();
  }
}

/**
 * implements hook_theme();
 * description: create the file as per below
 * eg : products-list.html.twig  for "products_list"
 */
function brancott_rest_api_theme($existing, $type, $theme, $path) {
  return array(
    'rest_content' => array(
      'variables' => array(
        'pagehtml' => NULL,
        'data' => NULL
      )
    ),
  );
}

function braoncott_rest_api_get_results($wine_id) {
  //print "aaaaaaaa"; exit;
  $rest_api = new BrancottRestApiController;
  $value = $rest_api->getProductDetails($wine_id);
  return $value;
}


function braoncott_rest_api_get_ranges() {
  //print "aaaaaaaa"; exit;
  $rest_api_ranges = new BrancottRestApiControllerRanges;
  $value = $rest_api->getRanges();
  return $value;
}
