<?php

use Drupal\brancott_rest_api\Controller\BrancottRestApiController;
use Drupal\brancott_rest_api\Controller\BrancottSearchFilterController;
use Drupal\brancott_rest_api\Controller\BrancottRestApiControllerRanges;
use Drupal\brancott_rest_api\Controller\BrancottRestApiControllerGenericPage;

/**
 * @file
 * Test API module.
 */
function brancott_rest_api_reponse($url, $method = 'GET', $params = array()) {
  $methods = [
    'POST',
    'GET',
    'PUT',
    'DELETE'
  ];
  $result = array();

  try {
    if (empty($url)) {
      throw new Exception("Invalid url");
    }
    if (in_array(strtoupper($method), $methods) === FALSE) {
      throw new Exception("Invalid method");
    }
    else {

      switch (strtoupper($method)) {
        case 'GET':
        case 'POST':
        case 'PUT':
        case 'DELETE':

          $result = brancott_rest_api_call_request($url, $method, $params);
          break;
        default:
          throw new Exception("Invalid method");
          break;
      }
    }
  }
  catch (Exception $e) {
    echo $e->getMessage();
  }

  return $result;
}

function brancott_rest_api_call_request($requesturl, $method, $params = array()) {

  // request url
  $url = $requesturl;

  try {
    // initialized curl
    $ch = curl_init();
    // set header for curl request
    $headers = array(
      "Cache-Control: no-cache",
      "Pragma: no-cache"
    );
    // set required setting with curl configuration
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_FRESH_CONNECT, TRUE);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);
    curl_setopt($ch, CURLOPT_FORBID_REUSE, 1);

    // pass the additional values
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));

    // close the curl connection
    $result = curl_exec($ch);
    $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $response['result'] = $result;
    $response['code'] = $httpcode;
    curl_close($ch);
    return $response;
  }
  catch (Exception $e) {
    echo $e->getMessage();
  }
}

/**
 * implements hook_theme();
 * description: create the file as per below
 * eg : products-list.html.twig  for "products_list"
 */
function brancott_rest_api_theme($existing, $type, $theme, $path) {
  return array(
    'rest_content' => array(
      'variables' => array(
        'pagehtml' => NULL,
        'data' => NULL
      )
    ),
    'search_results_template' => array(
      'variables' => array('search_array' => NULL),
    ),
    'search_results_range_template' => array(
      'variables' => array('range_details' => NULL, 'search_array' => NULL),
    ),
  );
}

function braoncott_rest_api_get_results($wine_id) {
  $rest_api = new BrancottRestApiController();
  $value = $rest_api->getProductDetails($wine_id);
  return $value;
}

function brancott_ip_details($ip) {
  $rest_api_ip = new BrancottIpController();
  $value = $rest_api_ip->getIpDetails($ip);
  return $value;
}

function braoncott_rest_api_get_filters() {
  $rest_api_filters = new BrancottRestApiControllerFilters();
  $value = $rest_api_filters->getFilters();
  return $value;
}

function braoncott_rest_api_get_ranges() {
  $rest_api_ranges = new BrancottRestApiControllerRanges();
  $value = $rest_api_ranges->getRanges();
  return $value;
}

function braoncott_rest_api_get_ranges_details() {
  $value = getRangeDetails();
  return $value;
}

function getRangeDetailsFiltered() {
  $rest_api_ranges = new BrancottRestApiControllerRanges;
  $values_ranges = $rest_api_ranges->getRanges();
  return $values_ranges;
}

function braoncott_rest_api_get_generic_url($generic_dch_url) {
  $rest_api_generic_page = new BrancottRestApiControllerGenericPage();
  $value = $rest_api_generic_page->getGenericPage($generic_dch_url);
  return $value;
}

function brancott_rest_api_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'webform_submission_newsletter_signup_form') {

    $form['actions']['submit']['#submit'][] = 'brancott_newsletter_salesforce';
  }
  else if ($form_id == 'webform_submission_enquire_form_form') {
    $form['actions']['submit']['#submit'][] = 'brancott_enquire_salesforce';
  }
  else if ($form_id == 'webform_submission_private_events_form') {
    $form['actions']['submit']['#submit'][] = 'brancott_private_events_salesforce';
  }
  else if ($form_id == 'webform_submission_book_a_table_form') {
    $form['actions']['submit']['#submit'][] = 'brancott_restaurant_salesforce';
  }
}

function brancott_newsletter_salesforce($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  
   $vc = \Drupal::config('brancott_our_wines.settings');
   $webform_duplication_message = $vc->get('newsletter_message');
    //$langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
   $message = str_replace("[webform_submission:langcode]",$langcode,$webform_duplication_message);
   $ip = $_SERVER['REMOTE_ADDR'];
   $ip_details = brancott_ip_details($ip);
   //print_r($ip_details);die; 
  $values = $form_state->getValues();
  $name = $values['name'];
  $last_name = $values['last_name'];
  $email_address = $values['email_address'];
  $dob = $values['date_of_birth'];
  $gender = $values['gender'];
  $postcode = $values['postcode'];
  $postcode_ca = $values['postcode_canada'];
  $postcode_us = $values['postcode_us'];
  $postcode_australia = $values['postcode_australia'];
  $state = $values['state'];
  $state_us = $values['state_us'];
  $state_australia = $values['state_australia'];
  $country = $values['country'];
  if ($values['country'] == 'au') {
    $state = $state_australia;
  }
  elseif ($values['country'] == 'us') {
    $state = $state_us;
  }
  if ($values['country'] == 'au') {
    $postcode = $postcode_australia;
  }
  elseif ($values['country'] == 'us') {
    $postcode = $postcode_us;
  }
  elseif ($values['country'] == 'ca') {
    $postcode = $postcode_ca;
  }
  $country = strlen($country) ? strtoupper($country) : '';
  $hear_more_from_brancott_estate = $values['hear_more_from_brancott_estate'];
  $hear_more_from_brands_from_pernod_ricard_group = $values['hear_more_from_brands_from_pernod_ricard_group'];
  $count = brancott_check_email_salesforce($email_address);
  if (!$count) {
    require_once(drupal_get_path('module', 'brancott_rest_api') . '/sdk/ET_Client.php');
    try {
      $myclient = new ET_Client();
      $DataExtensionNameForTesting = \Drupal::config('brancott_our_wines.settings')->get('external_key');
      \Drupal::logger('brancott_rest_api')->notice('Data Extension: ' . $DataExtensionNameForTesting);
      // Add a row to a DataExtension 
      \Drupal::logger('brancott_rest_api')->notice("Add a row to a DataExtension  \n");
      $postDRRow = new ET_DataExtension_Row();
      $postDRRow->authStub = $myclient;
      $postDRRow->props = array(
        "EmailAddress" => $email_address,
        "PostCode" => $postcode,
        "Gender" => $gender,
        "DateOfBirth" => $dob,
        "FirstName" => $name,
        "LastName" => $last_name,
        "State" => $state,
        "Country" => $country,
        "CampaignCode" => 'Newsletter',
        "OptInDate" => date("d/m/Y"),
        "OptInPreference" => $hear_more_from_brancott_estate ? 'true' : '',
        "OptIn_PernodRicard" => $hear_more_from_brands_from_pernod_ricard_group ? 'true' : '',
      ); //will be adding dynamic values from form_state
      $postDRRow->CustomerKey = $DataExtensionNameForTesting;
      $postResult = $postDRRow->post();
      \Drupal::logger('brancott_rest_api')->notice('Values entered: ' . " EmailAddress " . $email_address .
          " PostCode " . $postcode . " Gender " . $gender . " DateOfBirth " . $dob . " FirstName " . $name .
          " LastName " . $last_name . " State " . $state . " Country " . $country . " CampaignCode " . 'Newsletter' .
          " OptInDate " . date("m/d/Y") . " OptInPreference " . $hear_more_from_brancott_estate .
          " OptIn_PernodRicard " . $hear_more_from_brands_from_pernod_ricard_group);
      \Drupal::logger('brancott_rest_api')->notice('Post Status: ' . ($postResult->status ? 'true' : 'false') . "\n");
      \Drupal::logger('brancott_rest_api')->notice('Code: ' . $postResult->code);
      \Drupal::logger('brancott_rest_api')->notice('Message: ' . $postResult->message);
      \Drupal::logger('brancott_rest_api')->notice('Result Count: ' . count($postResult->results));
    }
    catch (Exception $e) {
      \Drupal::logger('brancott_rest_api')->notice('Caught exception: ' . $e->getMessage());
    }
  }
  else {
    
    
    drupal_get_messages();
    drupal_set_message(t($message), 'status');
  }
}

function brancott_enquire_salesforce($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $values = $form_state->getValues();
  $name = $values['name'];
  $last_name = $values['last_name'];
  $email_address = $values['email_address'];
  $yes_sign_me_up_to_exclusive_news_events_offers_ = $values['sign_up_field'];

  if ($yes_sign_me_up_to_exclusive_news_events_offers_) {
    $count = brancott_check_email_salesforce($email_address);
    if (!$count) {
      require_once(drupal_get_path('module', 'brancott_rest_api') . '/sdk/ET_Client.php');
      try {
        $myclient = new ET_Client();
        $DataExtensionNameForTesting = \Drupal::config('brancott_our_wines.settings')->get('external_key');
        \Drupal::logger('brancott_rest_api')->notice('Data Extension: ' . $DataExtensionNameForTesting);
        // Add a row to a DataExtension 
        \Drupal::logger('brancott_rest_api')->notice("Add a row to a DataExtension  \n");
        $postDRRow = new ET_DataExtension_Row();
        $postDRRow->authStub = $myclient;
        $postDRRow->props = array(
          "EmailAddress" => $email_address,
          "FirstName" => $name,
          "LastName" => $last_name,
          "CampaignCode" => 'Enquire',
          "OptInDate" => date("m/d/Y"),
          "OptInPreference" => 'true',
          "OptIn_PernodRicard" => '',
        );
        $postDRRow->CustomerKey = $DataExtensionNameForTesting;
        \Drupal::logger('brancott_rest_api')->notice('Values entered: ' . " EmailAddress " . $email_address .
            " FirstName " . $name . " LastName " . $last_name . " CampaignCode " . 'Enquire' .
            " OptInDate " . date("m/d/Y") . " OptInPreference " . $yes_sign_me_up_to_exclusive_news_events_offers_
        );
        $postResult = $postDRRow->post();
        \Drupal::logger('brancott_rest_api')->notice('Post Status: ' . ($postResult->status ? 'true' : 'false') . "\n");
        \Drupal::logger('brancott_rest_api')->notice('Code: ' . $postResult->code);
        \Drupal::logger('brancott_rest_api')->notice('Message: ' . $postResult->message);
        \Drupal::logger('brancott_rest_api')->notice('Result Count: ' . count($postResult->results));
      }
      catch (Exception $e) {
        \Drupal::logger('brancott_rest_api')->notice('Caught exception: ' . $e->getMessage());
      }
    }
    else {
      
      $vc = \Drupal::config('brancott_our_wines.settings');
      $webform_duplication_message = $vc->get('tour_experience_message');
      $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $message = str_replace("[webform_submission:langcode]",$langcode,$webform_duplication_message);
      drupal_get_messages();
      drupal_set_message(t($message), 'status');
      

    }
  }
}

function brancott_private_events_salesforce($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $values = $form_state->getValues();
  $name = $values['name'];
  $last_name = $values['last_name'];
  $email_address = $values['email_address'];
  $yes_sign_me_up_to_exclusive_news_events_offers_ = $values['yes_i_want_to_receive_news_events_and_offers_from_brancott_estat'];

  if ($yes_sign_me_up_to_exclusive_news_events_offers_) {
    $count = brancott_check_email_salesforce($email_address);
    if (!$count) {
      require_once(drupal_get_path('module', 'brancott_rest_api') . '/sdk/ET_Client.php');
      try {
        $myclient = new ET_Client();
        $DataExtensionNameForTesting = \Drupal::config('brancott_our_wines.settings')->get('external_key');
        \Drupal::logger('brancott_rest_api')->notice('Data Extension: ' . $DataExtensionNameForTesting);
        // Add a row to a DataExtension 
        \Drupal::logger('brancott_rest_api')->notice("Add a row to a DataExtension  \n");
        $postDRRow = new ET_DataExtension_Row();
        $postDRRow->authStub = $myclient;
        $postDRRow->props = array(
          "EmailAddress" => $email_address,
          "FirstName" => $name,
          "LastName" => $last_name,
          "CampaignCode" => 'Enquire',
          "OptInDate" => date("m/d/Y"),
          "OptInPreference" => 'true',
          "OptIn_PernodRicard" => '',
        );
        $postDRRow->CustomerKey = $DataExtensionNameForTesting;
        \Drupal::logger('brancott_rest_api')->notice('Values entered: ' . " EmailAddress " . $email_address .
            " FirstName " . $name . " LastName " . $last_name . " CampaignCode " . 'Enquire' .
            " OptInDate " . date("m/d/Y") . " OptInPreference " . $yes_sign_me_up_to_exclusive_news_events_offers_
        );
        $postResult = $postDRRow->post();
        \Drupal::logger('brancott_rest_api')->notice('Post Status: ' . ($postResult->status ? 'true' : 'false') . "\n");
        \Drupal::logger('brancott_rest_api')->notice('Code: ' . $postResult->code);
        \Drupal::logger('brancott_rest_api')->notice('Message: ' . $postResult->message);
        \Drupal::logger('brancott_rest_api')->notice('Result Count: ' . count($postResult->results));
      }
      catch (Exception $e) {
        \Drupal::logger('brancott_rest_api')->notice('Caught exception: ' . $e->getMessage());
      }
    }
    else {
      
      $vc = \Drupal::config('brancott_our_wines.settings');
      $webform_duplication_message = $vc->get('tour_experience_message');
      $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $message = str_replace("[webform_submission:langcode]",$langcode,$webform_duplication_message);
      drupal_get_messages();
      drupal_set_message(t($message), 'status');
      

    }
  }
}

function brancott_restaurant_salesforce($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $values = $form_state->getValues();
  $name = $values['name'];
  $last_name = $values['last_name'];
  $email_address = $values['email_address'];
  $yes_sign_me_up_to_exclusive_news_events_offers_ = $values['yes_sign_me_up_to_exclusive_news_events_offers_'];
  if ($yes_sign_me_up_to_exclusive_news_events_offers_) {
    $count = brancott_check_email_salesforce($email_address);
    if (!$count) {
      require_once(drupal_get_path('module', 'brancott_rest_api') . '/sdk/ET_Client.php');
      try {
        $myclient = new ET_Client();
        $DataExtensionNameForTesting = \Drupal::config('brancott_our_wines.settings')->get('external_key');
        \Drupal::logger('brancott_rest_api')->notice('Data Extension: ' . $DataExtensionNameForTesting);
        // Add a row to a DataExtension 
        \Drupal::logger('brancott_rest_api')->notice("Add a row to a DataExtension  \n");
        $postDRRow = new ET_DataExtension_Row();
        $postDRRow->authStub = $myclient;
        $postDRRow->props = array(
          "EmailAddress" => $email_address,
          "FirstName" => $name,
          "LastName" => $last_name,
          "CampaignCode" => 'Restaurant',
          "OptInDate" => date("m/d/Y"),
          "OptInPreference" => 'true',
          "OptIn_PernodRicard" => '',
        );
        $postDRRow->CustomerKey = $DataExtensionNameForTesting;
        \Drupal::logger('brancott_rest_api')->notice('Values entered: ' . " EmailAddress " . $email_address .
            " FirstName " . $name . " LastName " . $last_name . " CampaignCode " . 'Restaurant' .
            " OptInDate " . date("m/d/Y") . " OptInPreference " . $yes_sign_me_up_to_exclusive_news_events_offers_
        );
        $postResult = $postDRRow->post();
        \Drupal::logger('brancott_rest_api')->notice('Post Status: ' . ($postResult->status ? 'true' : 'false') . "\n");
        \Drupal::logger('brancott_rest_api')->notice('Code: ' . $postResult->code);
        \Drupal::logger('brancott_rest_api')->notice('Message: ' . $postResult->message);
        \Drupal::logger('brancott_rest_api')->notice('Result Count: ' . count($postResult->results));
      }
      catch (Exception $e) {
        \Drupal::logger('brancott_rest_api')->notice('Caught exception: ' . $e->getMessage());
      }
    }
    else {
      $vc = \Drupal::config('brancott_our_wines.settings');
      $webform_duplication_message = $vc->get('restaurant_page_message');
      $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $message = str_replace("[webform_submission:langcode]",$langcode,$webform_duplication_message);
      drupal_get_messages();
      drupal_set_message(t($message), 'status');
    }
  }
}

function brancott_check_email_salesforce($email) {
  $count = 0;
  require_once(drupal_get_path('module', 'brancott_rest_api') . '/sdk/ET_Client.php');
  try {
    $myclient = new ET_Client();
    $DataExtensionNameForTesting = \Drupal::config('brancott_our_wines.settings')->get('external_key');
    \Drupal::logger('brancott_rest_api')->notice('Data Extension: ' . $DataExtensionNameForTesting);
    // Add a row to a DataExtension 
    \Drupal::logger('brancott_rest_api')->notice("Get rows from Data Extension using filter (By Name)");
    $getDERows = new ET_DataExtension_Row();
    $getDERows->authStub = $myclient;
    $getDERows->props = array("EmailAddress");
    $getDERows->CustomerKey = $DataExtensionNameForTesting;
    $getDERows->filter = array('Property' => 'EmailAddress', 'SimpleOperator' => 'equals', 'Value' => $email);
    \Drupal::logger('brancott_rest_api')->notice('Values entered: ' . " EmailAddress " . $email);
    $getResult = $getDERows->get();
    \Drupal::logger('brancott_rest_api')->notice('Get Status: ' . ($getResult->status ? 'true' : 'false') . "\n");
    \Drupal::logger('brancott_rest_api')->notice('Code: ' . $getResult->code);
    \Drupal::logger('brancott_rest_api')->notice('Message: ' . $getResult->message);
    \Drupal::logger('brancott_rest_api')->notice('Result Count: ' . count($getResult->results));
    $count = count($getResult->results);
  }
  catch (Exception $e) {
    \Drupal::logger('brancott_rest_api')->notice('Caught exception: ' . $e->getMessage());
  }
  return $count;
}

function brancott_rest_api_entity_translation_create(\Drupal\Core\Entity\EntityInterface $translation) {
  foreach ($translation->getFieldDefinitions() as $field_def) {
//    kint($field_def->getName()); die;
    if($field_def->getType() == 'field_collection') {
      $field_name = $field_def->getName();
      $count = $translation->$field_name->count();
      if(!empty($count)) {
        for($i = 0; $i <= $count; $i ++) {
          if($translation->$field_name->get(0) != NULL) {
          $translation->$field_name->removeItem(0);
          }
        }
      }
    }
  }
//  kint($translation->getFieldDefinitions()); die;
  

  }

